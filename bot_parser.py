import requests
import json
from flask import Flask
from flask import jsonify
from flask import request
from flask import render_template
import key
import parser
from parser import all_obj_pars, all_future_obj_pars

app = Flask(__name__) # LOCAL

# application = Flask(__name__) # SERVER


headers = parser.headers
url_all_objects = parser.url_all_objects
url_future_objects = parser.url_future_objects

token = key.token
URL = 'https://api.telegram.org/bot' + token + '/'

# Ports currently supported for Webhooks: 443, 80, 88, 8443

proxies = {
    'http': '200.89.178.156:80',
    'https': '200.89.178.156:80',
}


# –ó–î–ï–°–¨ –°–û–ó–î–ê–ï–ú json —Å–ª–æ–≤–∞—Ä—å –ò –í –î–†–£–ì–û–ô –§–£–ù–ö–¶–ò–ò –ó–ê–ü–ò–°–´–í–ê–ï–ú –î–ê–ù–ù–´–ï –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
# —Ñ—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ß–¢–û? –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ç.–µ —Ñ–∞–π–ª –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è
# –≤ —Ñ–∞–π–ª–µ –Ω–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è –í–°–Ø –ø–µ—Ä–µ–ø–∏—Å–∫–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, —Ö–æ—Ç—è –í–†–û–î–ï –ë–´ –¥–æ–ª–∂–Ω–∞? —Ö–∑, –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å
def write_json(data, filename='answer.json'):
    with open(filename, 'w') as f:
        json.dump(data, f, indent=2, ensure_ascii=False)



# –ó–î–ï–°–¨ –¢–ï–õ–ï–ì–†–ê–ú –ü–†–ò–°–´–õ–ê–ï–¢ –ù–ê –°–ï–†–í–ï–† –û–ë–ù–û–í–õ–ï–ù–ò–Ø –û–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
def get_updates():
    url = URL + 'Updates'
    r = requests.get(url, proxies=proxies)
    write_json(r.json())
    return r.json()



# –ó–î–ï–°–¨ –û–¢–ü–†–ê–í–õ–Ø–ï–¢–°–Ø –û–¢–í–ï–¢ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Æ
def get_message(chat_id, text):
    url = URL + 'sendMessage'
    reply_markup = {
        'keyboard': [['–°–µ–π—á–∞—Å üí©'], ['–ü–æ—Ç–æ–º üåà'], ['–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ üëÄ'], ['–°–ø–∞—Å–∏–±–æ, –±—Ä–∞—Ç ‚úä']],
        'resize_keyboard': True,
    }
    answer = {
        'chat_id': chat_id,
        'text': text,
        'reply_markup': reply_markup,
    }
    r = requests.post(url, proxies=proxies, json=answer)


def send_all_objects():
    r = request.get_json()
    chat_id = r['message']['chat']['id']
    message = r['message']['text']
    text = all_obj_pars(url_all_objects, headers)
    a = 0
    data = []
    data.append('\n')
    data.append('''============\n–ù–´–ù–ï–®–ù–ò–ï –û–ë–™–ï–ö–¢–´\n============\n''')
    for name in text['text']:
        data.append(text['text'][a])
        data.append(text['url'][a])
        data.append('\n')
        a += 1
    # data.append(f'–í–°–ï–ì–û {a}')
    data.append('–í–°–ï–ì–û {}'.format(a))
    return '\n'.join(data)


def send_future_objects():
    r = request.get_json()
    chat_id = r['message']['chat']['id']
    message = r['message']['text']
    text = all_future_obj_pars(url_future_objects, headers)
    a = 0
    data = []
    data.append('\n')
    data.append('''============\n–ë–£–î–£–©–ò–ï –û–ë–™–ï–ö–¢–´\n============\n''')
    for name in text['name']:
        data.append(text['name'][a])
        data.append(text['url'][a])
        data.append('\n')
        a += 1
    # data.append(f'–í–°–ï–ì–û {a}')
    data.append('–í–°–ï–ì–û {}'.format(a))
    return '\n'.join(data)

get_updates()


@app.route('/', methods=['POST', 'GET']) # LOCAL

# @application.route('/', methods=['POST', 'GET']) # SERVER

def answer_bot():
    if request.method == 'POST':
        r = request.get_json()
        chat_id = r['message']['chat']['id']
        message = r['message']['text']

        if '—Å–µ–π—á–∞—Å' in message.lower():
            answer_now = send_all_objects()
            get_message(chat_id, answer_now)

        elif '–ø–æ—Ç–æ–º' in message.lower():
            answer_future = send_future_objects()
            get_message(chat_id, answer_future)

        elif '—Å–ø–∞—Å–∏–±–æ, –±—Ä–∞—Ç' in message.lower():
            ans = '–°–∞–ª—è–º –ê–ª–µ–π–∫—É–º, –±—Ä–∞—Ç!'
            get_message(chat_id, ans)

        else:
            get_message(chat_id, '–ï—Ä–∂–∞–Ω, –±—Ä–∞—Ç! '
                                  '–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å —á—Ç–æ –ø–æ—Å—Ç—Ä–æ–µ–Ω–æ —Å–µ–π—á–∞—Å, '
                                 '–Ω–∞–∂–º–∏ "—Å–µ–π—á–∞—Å", '
                                  '–µ—Å–ª–∏ —Ö–æ—á–µ—à—å –∑–Ω–∞—Ç—å —á—Ç–æ —Å–¥–∞–µ—Ç—Å—è –≤ –±—É–¥—É—â–µ–º, '
                                 '–Ω–∞–∂–º–∏ "–ø–æ—Ç–æ–º". –°–∞–ª—è–º –ê–ª–µ–π–∫—É–º, –±—Ä–∞—Ç!')
        write_json(r)
        return jsonify(r)
    return 'hello butts!' # –õ–û–ö–ê–õ–ö–ê
    # return render_template('index.html') # –î–õ–Ø –°–ï–†–í–ï–†–ê


if __name__ == '__main__': # LOCAL
    app.run()

# if __name__ == '__main__':
#     application.run(host='0.0.0.0') # SERVER

# –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–π –≤–µ—Ç–∫–∏
# —Ç–µ–ø–µ—Ä—å –¥–µ–ª–∞–µ–º –∫–æ–º–º–∏—Ç –≤ —Ç–µ—Å—Ç–æ–≤—É—é –≤–µ—Ç–∫—É


# –µ—â–µ –∫–∞–∫–∏–µ —Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ç–µ—Å—Ç–æ–≤–æ–π –≤–µ—Ç–∫–µ –∏ –∫–æ–º–º–∏—Ç
# –∫–æ–º–º–∏—Ç–∏–º –µ—â–µ –∫–∞–∫–∏–µ —Ç–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏ —Å–ª–∏–≤–∞–µ–º —Å –º–∞—Å—Ç–µ—Ä–æ–º